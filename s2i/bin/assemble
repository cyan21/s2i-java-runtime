#!/bin/bash -e
#
# S2I assemble script for the 'my-builder' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

RUNTIME_PATH=/opt/app-root/runtime

# If the 'my-builder' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

echo "---> Installing application source..."
cp -Rf /tmp/src/. ./

pwd 

env

ls -lR /tmp/

mkdir -p $RUNTIME_PATH 

echo "---> Setting up the JFrog CLI ..."
jfrog rt c artifactory --url=$ART_URL --user=$ART_USER --password=$ART_PASS

jfrog rt ping --server-id=artifactory

if [ $? -ne 0 ]; then
  echo "[ERROR] can't reach Artifactory via this URL : $ART_URL"
  exit 1
else
  echo "[INFO] ping OK to Artifactory ($ART_URL)"
fi

GROUP_ID=org.springframework
ART_ID=gs-rest-service
ART_VERSION=0.1.1-SNAPSHOT
REPO=libs-snapshot-local

jfrog rt curl "/api/search/latestVersion?g=${GROUP_ID}&a=${ART_ID}&v=${ART_VERSION}repos=${REPO}"

mv /tmp/src/${ART_ID}* $RUNTIME_PATH/

ls -lR $RUNTIME_PATH 

#exec /usr/libexec/s2i/assemble

